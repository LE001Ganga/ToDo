{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","getInputData","InputData","setState","formInput","target","value","storeData","storeInputData","state","deleteStoreData","EventDelete","tempData","window","confirm","splice","Number","id","className","type","placeholder","onKeyUp","inputEvent","onClick","this","map","item","index","deleteEvent","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MACqBA,E,kDACnB,aAAc,IAAD,8BACX,gBAMFC,aAAa,SAACC,GACZ,EAAKC,SAAS,CACZC,UAAUF,EAAUG,OAAOC,SATlB,EAYbC,UAAU,WAER,EAAKJ,SAAS,CACZK,eAAe,GAAD,mBAAK,EAAKC,MAAMD,gBAAhB,CAA+B,EAAKC,MAAML,eAf/C,EAkBbM,gBAAgB,SAACC,GACf,IAAIC,EAAS,EAAKH,MAAMD,eAEa,GAAlCK,OAAOC,QAAQ,oBAChBF,EAASG,OAAOC,OAAOL,EAAYN,OAAOY,IAAI,GAC9C,EAAKd,SAAS,CACZK,eAAeI,MAtBnB,EAAKH,MAAM,CACTL,UAAU,GACVI,eAAe,IAJN,E,0CA4Bb,WACC,IAAD,OACE,OACE,sBAAKU,UAAU,MAAf,UAEE,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,iCACE,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,aACtDC,QAAS,SAACC,GAAc,EAAKrB,aAAaqB,MAAe,uBAC3D,wBAAQH,KAAK,SAASD,UAAU,kBAAkBK,QAASC,KAAKjB,UAAhE,+BAQV,qBAAKW,UAAU,qBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACGM,KAAKf,MAAMD,eAAeiB,KAAI,SAACC,EAAKC,GAAN,OAC7B,qBAAIT,UAAU,kBAAd,UACGQ,EACD,wBAAQR,UAAU,iBAAiBK,QAAS,SAACK,GAAe,EAAKlB,gBAAgBkB,IAAjF,SAEE,mBAAGV,UAAU,sBAJoBS,qB,GArDtBE,aCWlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed351b8f.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nexport default class App extends Component{\n  constructor(){\n    super();\n    this.state={\n      formInput:\"\",\n      storeInputData:[]\n    }\n  }\n  getInputData=(InputData)=>{\n    this.setState({\n      formInput:InputData.target.value\n    })\n  }\n  storeData=()=>\n  { \n    this.setState({\n      storeInputData:[...this.state.storeInputData,this.state.formInput]\n    })\n  }\n  deleteStoreData=(EventDelete)=>{\n    var tempData=this.state.storeInputData;\n    \n    if(window.confirm(\"Are you sure ?\")==true){\n      tempData.splice(Number(EventDelete.target.id),1)\n      this.setState({\n        storeInputData:tempData\n      })\n    }\n  }\n  render()\n  {\n    return(\n      <div className=\"row\">\n        {/*First column */}\n        <div className=\"col-lg-5 col-md-10\">\n            <div className=\"card mt-3\">\n              <div className=\"card-body\">\n                <form>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Add data..\" \n                    onKeyUp={(inputEvent)=>{this.getInputData(inputEvent)}}/><br></br>\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={this.storeData}>\n                      Add data\n                  </button>\n                </form>\n              </div>\n            </div>\n        </div>\n        {/*Second column */}\n        <div className=\"col-lg-5 col-md-10\">\n          <div className=\"card mt-3\">\n            <div className=\"card-body\">\n              <ul className=\"list-group\">\n                {this.state.storeInputData.map((item,index)=>(\n                  <li className=\"list-group-item\" key={index}>\n                    {item}\n                    <button className=\"btn btn-danger\" onClick={(deleteEvent)=>{this.deleteStoreData(deleteEvent)}}>\n                      \n                      <i className=\"fa fa-trash-o\"></i>\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}